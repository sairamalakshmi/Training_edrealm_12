
#Rat in a maze 1-gfg
class Solution:
    # Function to find all possible paths
    def ratInMaze(self, maze):
        n=len(maze)
        res=[]
        visited=[[0 for _ in range(n)]for _ in range(n)]
        d=[('D',1,0),('L',0,-1),('R',0,1),('U',-1,0)]
        def solve(x,y):
            return 0 <=x <n and 0<=y<n and maze[x][y]==1 and not visited[x][y]
        def backtrack(x,y,path):
            if x==n-1 and y==n-1:
                res.append(path)
                return
            visited[x][y]=1
            for move,dx,dy in d:
                newx=x+dx
                newy=y+dy
                if solve(newx,newy):
                    backtrack(newx,newy,path+move)
            visited[x][y]=0
        if maze[0][0]==1:
            backtrack(0,0,"")
        return res