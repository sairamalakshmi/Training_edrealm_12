🚪 Sliding Window Technique
📌 What is it?
The Sliding Window is a powerful technique for solving problems involving arrays or strings that require examining subsets (contiguous segments) of elements, such as:

Finding maximum/minimum/average of subarrays

Longest/shortest substring with certain conditions

It reduces the time complexity by avoiding unnecessary re-computation.

📈 When to Use?
Use Sliding Window when:

The problem involves contiguous subarrays or substrings

You need to process all windows of size k or dynamically changing windows

🧠 How it works?
Instead of recalculating the result from scratch for every window, we:

Slide the window over the data structure

Add the new incoming element

Remove the outgoing element

🧮 Time & Space Complexity
Time: O(n) – One pass through the array

Space: O(1) – Constant space

🔍 Common Sliding Window Problems
Maximum sum subarray of size k

Longest substring without repeating characters

Minimum window substring

Longest substring with at most k distinct characters

**TEMPLATE for Sliding Window**
l=list(map(int,input().split()))
k=int(input())
i,j=0,0
while():
  if ((j-i)+1)<k:
    j+=1
  elif ((j-i)+1)==k:
    i+=1
    j+=1


