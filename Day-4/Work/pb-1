#Rat in the maze(using recurssion)

def ratInMaze(maze, x, y, n, path):
    if x == n - 1 and y == n - 1:
        path.append((x, y))
        return True
    
    if x < 0 or y < 0 or x >= n or y >= n or maze[x][y] == 0:
        return False
    
    maze[x][y] = 0  # Mark the cell as visited
    path.append((x, y))  # Add the current cell to the path

    # Move in all four directions
    if (ratInMaze(maze, x + 1, y, n, path) or
        ratInMaze(maze, x - 1, y, n, path) or
        ratInMaze(maze, x, y + 1, n, path) or
        ratInMaze(maze, x, y - 1, n, path)):
        return True

    # Backtrack if no path is found
    path.pop()
    maze[x][y] = 1  # Unmark the cell
    return False
maze = [
    [1, 0, 0, 0],
    [1, 1, 0, 1],
    [0, 1, 0, 0],
    [0, 1, 1, 1]
]
n = len(maze)
path = []   
if ratInMaze(maze, 0, 0, n, path):
    print("Path to the destination:", path)
else:
    print("No path to the destination")
# Output: Path to the destination: [(0, 0), (1, 0), (1, 1), (2, 1), (3, 1), (3, 2), (3, 3)]